# -*- coding: utf-8 -*-
"""Automate-Rachmat Kahfiwan Nur

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fx1N7S1pmX3tYaeNNHGqmWH0UTOvDwrm
"""

# ==============================
# 1. Import Library
# ==============================
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from xgboost import XGBClassifier, plot_importance

from google.colab import drive
drive.mount('/content/drive')

# ==============================
# 2. Load Dataset
# ==============================
data = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/data_balita.csv")

print("✅ Data berhasil dimuat")
print(data.head())

import pandas as pd
from sklearn.preprocessing import LabelEncoder, StandardScaler
import os

def preprocess(data, output_file):
    # Load dataset
    # Missing Values
    data = data.dropna()

    # Remove duplicates
    data = data.drop_duplicates()

    # Encoding
    le_gender = LabelEncoder()
    data["Jenis Kelamin"] = le_gender.fit_transform(data["Jenis Kelamin"])

    le_status = LabelEncoder()
    data["Status Gizi"] = le_status.fit_transform(data["Status Gizi"])

    # Scaling
    scaler = StandardScaler()
    data[["Umur (bulan)", "Tinggi Badan (cm)"]] = scaler.fit_transform(
        data[["Umur (bulan)", "Tinggi Badan (cm)"]]
    )

    # Create directory if it doesn't exist
    output_dir = os.path.dirname(output_file)
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Save hasil
    data.to_csv(output_file, index=False)
    print(f"✅ Data selesai diproses dan disimpan ke {output_file}")
    return data

if __name__ == "__main__":
    output_file = "namadataset_preprocessing/data_balita_ready.csv"
    processed_data = preprocess(data.copy(), output_file) # Pass a copy of the data to avoid modifying the original DataFrame
    print(processed_data.head())